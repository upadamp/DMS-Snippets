{
  "Triggers Template": {
    "prefix": "!dms-triggers",
    "body": [
      "module.exports = function triggers (options, cb) {",
      "  const unipro = require('@unipro/dms-utils')(options, { agency: 'UNIPRO' })",
      "  const { Promise } = unipro",
      "  const _ = require('slapdash')",
      "  const _ticket = 'txxx'",
      "",
      "  const fire = ({ \\$basket, \\$addButton, \\$quantity }) => {",
      "    options.log.info('UNIPRO: fire')",
      "    options.state.set('state', { \\$basket, \\$addButton, \\$quantity })",
      "    cb()",
      "  }",
      "",
      "  const attachClickListener = ({ \\$basket, \\$addButton, \\$quantity }) => {",
      "    options.log.info('UNIPRO: attachClickListener')",
      "    unipro.onActivation(() => {",
      "      \\$addButton.on('click.' + _ticket, () => options.emitCustomGoal(_ticket + ':add-to-basket-button:click'))",
      "    })",
      "    unipro.onRemove(() => \\$addButton.off('.' + _ticket))",
      "    return { \\$basket, \\$addButton, \\$quantity }",
      "  }",
      "",
      "  const pollForBasket = () => {",
      "    options.log.info('UNIPRO: pollForBasket')",
      "    const pollFor = { \\$basket: '#basket', \\$addButton: '#basket .addButton', \\$quantity: '#basket .quantity' }",
      "    return unipro.poller(pollFor)",
      "  }",
      "",
      "  const waitForBasketAjax = () => {",
      "    options.log.info('UNIPRO: waitForBasketAjax')",
      "    return new Promise(resolve => {",
      "      const \\$\\$document = window.jQuery(document)",
      "      \\$\\$document.on('ajaxComplete.' + _ticket, (event, xhr, settings) => {",
      "        if (xhr && xhr.status === 200 && settings.url.indexOf('additem') !== -1) {",
      "          resolve()",
      "        }",
      "      })",
      "      unipro.onRemove(() => \\$\\$document.off('.' + _ticket))",
      "    })",
      "  }",
      "",
      "  const waitForWindowJquery = () => {",
      "    options.log.info('UNIPRO: waitForWindowJquery')",
      "    const pollFor = { $$: 'window.jQuery' }",
      "    return unipro.poller(pollFor)",
      "  }",
      "",
      "  const checkProductCategories = product => {",
      "    options.log.info('UNIPRO: checkProductCategories')",
      "    const categories = _.get(product, 'categories')",
      "    const isXXXPage = _.some(categories, category => /xxx/i.test(category))",
      "    if (!isXXXPage) {",
      "      throw new unipro.Warning('Not a XXX page')",
      "    }",
      "  }",
      "",
      "  const waitForProduct = () => {",
      "    options.log.info('UNIPRO: waitForProduct')",
      "    return new Promise(resolve => {",
      "      const productListener = options.uv.on(/ecProduct$/i, ({ eventType, product }) => {",
      "        if (/detail/i.test(eventType)) {",
      "          resolve(product)",
      "        }",
      "      })",
      "      productListener.replay()",
      "      unipro.onRemove(productListener.dispose)",
      "    })",
      "  }",
      "",
      "  const initialiseTriggers = () => {",
      "    options.log.info('UNIPRO: initialiseTriggers')",
      "",
      "    waitForProduct()",
      "      .then(checkProductCategories)",
      "      .then(waitForWindowJquery)",
      "      .then(waitForBasketAjax)",
      "      .then(pollForBasket)",
      "      .then(attachClickListener)",
      "      .then(fire)",
      "      .catch(unipro.onError)",
      "  }",
      "",
      "  initialiseTriggers()",
      "}",
      ""
    ],
    "description": "Triggers Template"
  },
  "Slick Require": {
    "prefix": "!dms-slick-require",
    "body": [
      "const requireSlickPackage = () => {",
      "  options.log.info('UNIPRO: requireSlickPackage')",
      "  return new Promise((resolve, reject) => {",
      "    // @ts-ignore",
      "    require(['//d1m54pdnjzjnhe.cloudfront.net/js-libs/slick/slick_requirable.1.6.min.js'], Slick => {",
      "      resolve({ Slick })",
      "    }).catch(e => reject(new Error('Require package failed:' + e.message)))",
      "  })",
      "}"
    ],
    "description": "Slick Require"
  }
}
